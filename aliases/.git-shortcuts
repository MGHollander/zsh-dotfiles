#!/usr/bin/env bash

# Git shortcuts

# This file cannot be named .git, because most editors will hide it then.
# TODO Consider to move the Git aliases from .gitconfig to this file to have everything at one place.
# TODO Remove aliases that are already part of the Oh My Zsh plugin.

alias gb='git branch'
alias gba='git branch --all'
alias gbr='git branch --remote'
alias gco='git checkout'
alias gcd='git checkout develop && glc'
alias gcm='git checkout master && glc'
alias gcs='git checkout release/staging && glc'
alias gdt='git describe --tags $(git rev-list --tags --max-count=1)'
alias gd='git diff'
alias gf='git fetch'
alias gfco='gf && gco'
alias gl='git pull'
alias glc='git pull origin "$(git_current_branch)"'
alias gld='git pull origin develop'
alias gp='git push'
alias gpc='git push origin "$(git_current_branch)"'
alias gr='git remote -v'
alias gst='git status'
# TODO make a function from this to make the returned tags configurable
alias gtl='git tag --sort=-version:refname | head -n 5'

# Clean up local branches that do not exist on remote anymore (https://stackoverflow.com/a/17029936)
# TODO make a function from this command that return's branches that will be
#   deleted and ask for confirmation before deleting.
#   Add a flag to delete the branches without confirmation.
#   Add a flag to delete the branches that are not fully merged.
alias gclb='git-clean-local-branches'

gcou() { git checkout "$1" && git pull origin "$1"; }
git-clean-local-branches() { git fetch --prune && git branch -r | awk "{print \$1}" | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk "{print \$1}" | xargs git branch -d; }
