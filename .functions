#!/usr/bin/env bash

# TODO add these functions to the readme

# Create a new directory and enter it
function mkd() {
	mkdir -p "$@" && cd "$_";
}

# Determine size of a file or total size of a directory
function fs() {
	if du -b /dev/null > /dev/null 2>&1; then
		local arg=-sbh;
	else
		local arg=-sh;
	fi
	if [[ -n "$@" ]]; then
		du $arg -- "$@";
	else
		du $arg .[^.]* ./*;
	fi;
}

# Create a data URL from a file
function dataurl() {
	local mimeType=$(file -b --mime-type "$1");
	if [[ $mimeType == text/* ]]; then
		mimeType="${mimeType};charset=utf-8";
	fi
	echo "data:${mimeType};base64,$(openssl base64 -in "$1" | tr -d '\n')";
}

# TODO Add to docs
# TODO Use these functions in the project creation script
function mdbc() {
    DB_NAME=$1

    if [ -z "$DB_NAME" ];then
        echo "No database name given"
        return
    fi

    mysql -u"$MYSQL_USER" -p"$MYSQL_PASS" -e "
        CREATE DATABASE IF NOT EXISTS $DB_NAME;
        CREATE USER IF NOT EXISTS $MYSQL_USER@$MYSQL_HOST IDENTIFIED BY '$MYSQL_PASS';
        GRANT ALL PRIVILEGES ON $DB_NAME.* TO '$MYSQL_USER'@'$MYSQL_HOST';
        FLUSH PRIVILEGES;
        "
    code=$?

    if [ 0 -ne $code ];then
        echo "Couldn't create database";
        exit $code;
    fi
}

# TODO Add to docs
# TODO Add confirmation if to make sure an existing DB should be removed
function mdbd() {
    DB_NAME=$1

    if [ -z "$DB_NAME" ];then
        echo "No database name given"
        return
    fi

    mysql -u"$MYSQL_USER" -p"$MYSQL_PASS" -e "
        DROP DATABASE $DB_NAME;
        "
    code=$?

    if [ 0 -ne $code ];then
        echo "Couldn't drop database";
        exit $code;
    fi
}

# My last commits
git-standup() {
    AUTHOR=${AUTHOR:="`git config user.name`"}

    since=yesterday
    if [[ $(date +%u) == 1 ]] ; then
        since="2 days ago"
    fi

    git log --all --since "$since" --oneline --author="$AUTHOR"
}
